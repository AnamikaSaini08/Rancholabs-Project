/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.8 scene.gltf -t
Author: JeremyW (https://sketchfab.com/JeremyW)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/star-b092c1d27d954c8e9c051299ef74038d
Title: Star
*/

import * as THREE from "three";
import React, { Ref, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    star_0: THREE.Mesh;
    star_1: THREE.Mesh;
    star_2: THREE.Mesh;
  };
  materials: {
    glassesFrames: THREE.MeshStandardMaterial;
    lens: THREE.MeshStandardMaterial;
    Star: THREE.MeshStandardMaterial;
  };
};

type ActionName = "starAction";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Coin(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF("/scene.gltf") as GLTFResult;
  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group as Ref<THREE.Group>} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="Root">
            <group name="star" position={[0, 0.601, 0.418]} scale={8}>
              <mesh
                name="star_0"
                geometry={nodes.star_0.geometry}
                material={materials.glassesFrames}
              />
              <mesh
                name="star_1"
                geometry={nodes.star_1.geometry}
                material={materials.lens}
              />
              <mesh
                name="star_2"
                geometry={nodes.star_2.geometry}
                material={materials.Star}
              />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("./Assets/coin/scene.gltf");